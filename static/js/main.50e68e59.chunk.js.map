{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","onSubmitForm","useState","name","setName","number","setNumber","onFormInputChange","e","target","value","makeContact","id","shortId","generate","genIdNumber","genIdName","className","s","contactForm","onSubmit","preventDefault","contactLabel","htmlFor","type","pattern","title","required","contactInput","onChange","addContactBtn","Filter","filterQuery","genIdSearch","searchInputWrap","filterLabel","ContactList","queryList","onDeleteContact","contactList","map","contactWrap","contact","contactNumber","btnDelete","onClick","App","data","contacts","setContacts","filterContact","setFilterContact","useEffect","localCache","JSON","parse","localStorage","getItem","setItem","stringify","filterNormalized","toLowerCase","filteredContacts","filter","includes","inputName","inputNumber","prev","every","alert","selectId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e68e59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInputWrap\":\"Filter_searchInputWrap__1Cpg8\",\"filterLabel\":\"Filter_filterLabel__25PkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__cC19x\",\"contactInput\":\"ContactForm_contactInput__1rUX0\",\"addContactBtn\":\"ContactForm_addContactBtn__1w--2\",\"contactLabel\":\"ContactForm_contactLabel__3p4xN\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\nimport s from './ContactForm.module.scss';\n\nconst ContactForm = ({ onSubmitForm }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onSubmitContactForm = e => {\n    e.preventDefault();\n    onSubmitForm(makeContact());\n    setName('');\n    setNumber('');\n  };\n\n  const onFormInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const makeContact = () => {\n    const newContact = {\n      id: shortId.generate(),\n      name,\n      number,\n    };\n    return newContact;\n  };\n\n  const genIdNumber = shortId.generate();\n  const genIdName = shortId.generate();\n\n  return (\n    <form className={s.contactForm} onSubmit={onSubmitContactForm}>\n      <label className={s.contactLabel} htmlFor={genIdName}>\n        Name\n      </label>\n      <input\n        id={genIdName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n  Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        className={s.contactInput}\n        onChange={onFormInputChange}\n      />\n      <label className={s.contactLabel} htmlFor={genIdNumber}>\n        Number\n      </label>\n      <input\n        id={genIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        className={s.contactInput}\n        onChange={onFormInputChange}\n      />\n      <button className={s.addContactBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nContactForm.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport shortId from 'shortid';\nimport s from './Filter.module.scss';\n\nconst Filter = ({ value, filterQuery }) => {\n  const genIdSearch = shortId.generate();\n  return (\n    <span className={s.searchInputWrap}>\n      <label className={s.filterLabel} htmlFor={genIdSearch}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={genIdSearch}\n        onChange={filterQuery}\n      />\n    </span>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  filterQuery: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\n\nconst ContactList = ({ queryList, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {queryList.map(({ id, name, number }) => (\n        <div className={s.contactWrap} key={id}>\n          <li className={s.contact}>\n            {name}:<span className={s.contactNumber}>{number}</span>\n          </li>\n          <button\n            className={s.btnDelete}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  queryList: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n};\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport data from '../../data.json';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(data);\n  const [filterContact, setFilterContact] = useState('');\n  useEffect(() => {\n    const localCache = JSON.parse(localStorage.getItem('contacts'));\n    setContacts(localCache || data);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onInputChange = e => {\n    const { value } = e.target;\n    setFilterContact(value);\n  };\n  const addContacts = contact => {\n    const inputName = contact.name;\n    const inputNumber = contact.number;\n    setContacts(prev => {\n      if (\n        prev.every(\n          contact =>\n            contact.name.toLowerCase() !== inputName.toLowerCase() &&\n            inputNumber !== contact.number,\n        )\n      ) {\n        return [contact, ...prev];\n      } else\n        alert(`${inputName} contact with the ${inputNumber} already exists!!!`);\n      return prev;\n    });\n  };\n  const deleteContact = selectId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== selectId),\n    );\n  };\n\n  const filterNormalized = filterContact.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterNormalized),\n  );\n  return (\n    <section className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmitForm={addContacts} />\n      <h2 className=\"contacts\">Contacts</h2>\n      <Filter value={filterContact} filterQuery={onInputChange} />\n      <ContactList\n        queryList={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2-j4m\",\"contactWrap\":\"ContactList_contactWrap__3nH3j\",\"contact\":\"ContactList_contact__1Of4b\",\"contactNumber\":\"ContactList_contactNumber__3ittx\",\"btnDelete\":\"ContactList_btnDelete__1qwiL\"};"],"sourceRoot":""}